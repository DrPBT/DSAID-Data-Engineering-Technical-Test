# The DAG object; we'll need this to instantiate a DAG
from airflow import DAG

# Operators; we need this to operate!
from airflow.operators.bash_operator import BashOperator

from datetime import datetime, timedelta

default_args = {
    'owner': 'Paul',
    'depends_on_past': False,
    'start_date': datetime(2021, 11, 19),
    'email': ['Paulngyl@gmail.com'],
    'email_on_failure': False,
    'email_on_retry': False,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
    # 'queue': 'bash_queue',
    # 'pool': 'backfill',
    # 'priority_weight': 10,
    # 'end_date': datetime(2023, 1, 1),
}

dag = DAG(
    'DSAID', default_args=default_args, schedule_interval=timedelta(days=1))

# Transforming CSV
# importing pandas module 
import pandas as pd
# importing numpy module
import numpy as np
   
# reading csv file from url 
data = pd.read_csv("https://raw.githubusercontent.com/hanselblack/dataeng_test/master/dataset1.csv")
  
# dropping null value columns to avoid errors
data.dropna(inplace = True)

#Dropping rows with empty name
data = data.dropna(subset=['name'])
  
# new data frame with split value columns
new = data["name"].str.split(" ", n = 1, expand = True)
  
# making separate first name column from new data frame
data["first_name"]= new[0]
  
# making separate last name column from new data frame
data["last_name"]= new[1]

# making separate last name column from new data frame
data['above_100'] = np.where(data['price']> 100, True, False)

#I am using Python Pandas, it automatically removes leading zeros when processing CSVs
  
# Dropping old Name columns
data.drop(columns =["name"], inplace = True)

# df display
data

